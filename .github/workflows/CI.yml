# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  
env:
  PROJECT_ID: tensile-pier-424908-f7
  GKE_CLUSTER: rackapi
  GKE_ZONE: europe-west1

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and run services
        run: |
          docker-compose up -d --build

      - name: Run tests
        run: |
          dotnet test RackApi.IntegrationTest/RackApi.IntegrationTest.csproj

      - uses: actions/checkout@v4
        
      - name: Clean up
        run: |
          docker-compose down
  
  sonarCloud:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"RackFontys_RackApi" /o:"rackfontys" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
  
  deploy:
    name: deploy to gke
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}
      
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Deploy database
        run: |
          kubectl apply -f ./KubernetesConfigs/postgres-chats-deployment.yaml
          kubectl apply -f ./KubernetesConfigs/postgres-chats-service.yaml
          kubectl apply -f ./KubernetesConfigs/postgres-users-deployment.yaml
          kubectl apply -f ./KubernetesConfigs/postgres-users-service.yaml

      - name: Deploy RabbitMQ
        run: |
          kubectl apply -f ./KubernetesConfigs/rabbitmq-deployment.yaml
          kubectl apply -f ./KubernetesConfigs/rabbitmq-service.yaml
          
      - name: Deploy service
        run: |
          kubectl apply -f ./KubernetesConfigs/user-deployment.yaml
          kubectl apply -f ./KubernetesConfigs/user-service.yaml
          kubectl apply -f ./KubernetesConfigs/message-deployment.yaml
          kubectl apply -f ./KubernetesConfigs/message-service.yaml
 
      - name: Deploy ingress
        run: |
          kubectl apply -f ./KubernetesConfigs/ingress.yaml